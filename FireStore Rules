// Updated Firestore Security Rules with Image Upload Support
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    // Global messages collection rules
    match /messages/{docId} {
      allow read: if request.auth != null;
      allow create: if canCreateMessage();
    }

    // User profiles collection rules
    match /userProfiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                    request.auth.uid == userId &&
                    isNotBanned();
    }

    // Status collection rules
    match /status/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                    request.auth.uid == userId;
    }

    // Chats collection (for direct messages)
    match /chats/{chatId} {
      allow read: if request.auth != null &&
                  (resource.data.participants.hasAny([request.auth.uid]));

      allow create: if request.auth != null &&
                     request.resource.data.participants.hasAny([request.auth.uid]) &&
                     isNotBanned();

      allow update: if request.auth != null &&
                     resource.data.participants.hasAny([request.auth.uid]) &&
                     isNotBanned();

      // Messages inside chats
      match /messages/{messageId} {
        allow read: if request.auth != null &&
                     get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);

        allow create: if request.auth != null &&
                       get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]) &&
                       request.auth.uid == request.resource.data.uid &&
                       isNotBanned();
      }
    }

    // Helper functions
    function canCreateMessage() {
      let isSignedIn = request.auth != null;
      let isOwner = request.auth.uid == request.resource.data.uid;
      let isValidMessage =
        // Either a text message
        (request.resource.data.text is string && request.resource.data.text.size() > 0) ||
        // Or an image message
        (request.resource.data.imageUrl is string && request.resource.data.imageUrl.matches('^https?://'));

      return isSignedIn && isOwner && isValidMessage && isNotBanned();
    }

    function isNotBanned() {
      return exists(/databases/$(database)/documents/banned/$(request.auth.uid)) == false;
    }
  }
}